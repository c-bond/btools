// Code generated by protoc-gen-go. DO NOT EDIT.
// source: btools.proto

package btools

/*
option go_package = "btools/protoc";
*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type DdsCheckRequest struct {
	Projno               int32    `protobuf:"varint,1,opt,name=projno" json:"projno,omitempty"`
	Docno                int32    `protobuf:"varint,2,opt,name=docno" json:"docno,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Res                  bool     `protobuf:"varint,4,opt,name=res" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DdsCheckRequest) Reset()         { *m = DdsCheckRequest{} }
func (m *DdsCheckRequest) String() string { return proto.CompactTextString(m) }
func (*DdsCheckRequest) ProtoMessage()    {}
func (*DdsCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btools_cf1c38d2d977484c, []int{0}
}
func (m *DdsCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DdsCheckRequest.Unmarshal(m, b)
}
func (m *DdsCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DdsCheckRequest.Marshal(b, m, deterministic)
}
func (dst *DdsCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DdsCheckRequest.Merge(dst, src)
}
func (m *DdsCheckRequest) XXX_Size() int {
	return xxx_messageInfo_DdsCheckRequest.Size(m)
}
func (m *DdsCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DdsCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DdsCheckRequest proto.InternalMessageInfo

func (m *DdsCheckRequest) GetProjno() int32 {
	if m != nil {
		return m.Projno
	}
	return 0
}

func (m *DdsCheckRequest) GetDocno() int32 {
	if m != nil {
		return m.Docno
	}
	return 0
}

func (m *DdsCheckRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DdsCheckRequest) GetRes() bool {
	if m != nil {
		return m.Res
	}
	return false
}

// The response message containing the greetings
type DdsCheckReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Res                  bool     `protobuf:"varint,2,opt,name=res" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DdsCheckReply) Reset()         { *m = DdsCheckReply{} }
func (m *DdsCheckReply) String() string { return proto.CompactTextString(m) }
func (*DdsCheckReply) ProtoMessage()    {}
func (*DdsCheckReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_btools_cf1c38d2d977484c, []int{1}
}
func (m *DdsCheckReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DdsCheckReply.Unmarshal(m, b)
}
func (m *DdsCheckReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DdsCheckReply.Marshal(b, m, deterministic)
}
func (dst *DdsCheckReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DdsCheckReply.Merge(dst, src)
}
func (m *DdsCheckReply) XXX_Size() int {
	return xxx_messageInfo_DdsCheckReply.Size(m)
}
func (m *DdsCheckReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DdsCheckReply.DiscardUnknown(m)
}

var xxx_messageInfo_DdsCheckReply proto.InternalMessageInfo

func (m *DdsCheckReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DdsCheckReply) GetRes() bool {
	if m != nil {
		return m.Res
	}
	return false
}

func init() {
	proto.RegisterType((*DdsCheckRequest)(nil), "btools.DdsCheckRequest")
	proto.RegisterType((*DdsCheckReply)(nil), "btools.DdsCheckReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BtoolsManagerClient is the client API for BtoolsManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BtoolsManagerClient interface {
	// Sends a greeting
	DdsCheckClientDoc(ctx context.Context, in *DdsCheckRequest, opts ...grpc.CallOption) (*DdsCheckReply, error)
	DdsCheckContractorDoc(ctx context.Context, in *DdsCheckRequest, opts ...grpc.CallOption) (*DdsCheckReply, error)
}

type btoolsManagerClient struct {
	cc *grpc.ClientConn
}

func NewBtoolsManagerClient(cc *grpc.ClientConn) BtoolsManagerClient {
	return &btoolsManagerClient{cc}
}

func (c *btoolsManagerClient) DdsCheckClientDoc(ctx context.Context, in *DdsCheckRequest, opts ...grpc.CallOption) (*DdsCheckReply, error) {
	out := new(DdsCheckReply)
	err := c.cc.Invoke(ctx, "/btools.BtoolsManager/DdsCheckClientDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btoolsManagerClient) DdsCheckContractorDoc(ctx context.Context, in *DdsCheckRequest, opts ...grpc.CallOption) (*DdsCheckReply, error) {
	out := new(DdsCheckReply)
	err := c.cc.Invoke(ctx, "/btools.BtoolsManager/DdsCheckContractorDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BtoolsManagerServer is the server API for BtoolsManager service.
type BtoolsManagerServer interface {
	// Sends a greeting
	DdsCheckClientDoc(context.Context, *DdsCheckRequest) (*DdsCheckReply, error)
	DdsCheckContractorDoc(context.Context, *DdsCheckRequest) (*DdsCheckReply, error)
}

func RegisterBtoolsManagerServer(s *grpc.Server, srv BtoolsManagerServer) {
	s.RegisterService(&_BtoolsManager_serviceDesc, srv)
}

func _BtoolsManager_DdsCheckClientDoc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DdsCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtoolsManagerServer).DdsCheckClientDoc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btools.BtoolsManager/DdsCheckClientDoc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtoolsManagerServer).DdsCheckClientDoc(ctx, req.(*DdsCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BtoolsManager_DdsCheckContractorDoc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DdsCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtoolsManagerServer).DdsCheckContractorDoc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btools.BtoolsManager/DdsCheckContractorDoc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtoolsManagerServer).DdsCheckContractorDoc(ctx, req.(*DdsCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BtoolsManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "btools.BtoolsManager",
	HandlerType: (*BtoolsManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DdsCheckClientDoc",
			Handler:    _BtoolsManager_DdsCheckClientDoc_Handler,
		},
		{
			MethodName: "DdsCheckContractorDoc",
			Handler:    _BtoolsManager_DdsCheckContractorDoc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "btools.proto",
}

func init() { proto.RegisterFile("btools.proto", fileDescriptor_btools_cf1c38d2d977484c) }

var fileDescriptor_btools_cf1c38d2d977484c = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0xbd, 0x4e, 0x03, 0x31,
	0x10, 0x84, 0x71, 0x7e, 0x0e, 0xb2, 0x22, 0x02, 0x56, 0x04, 0x2c, 0xaa, 0xd3, 0x55, 0x57, 0xa5,
	0x80, 0x92, 0x8e, 0x84, 0x82, 0x82, 0xc6, 0x6f, 0xe0, 0x38, 0xab, 0xf0, 0xe3, 0x78, 0x8d, 0x6d,
	0x8a, 0x7b, 0x1c, 0xde, 0x14, 0xe1, 0xfb, 0x41, 0x82, 0x2e, 0xdd, 0x7c, 0xb6, 0x66, 0xc6, 0x63,
	0x38, 0xdd, 0x24, 0x66, 0x1b, 0x97, 0x3e, 0x70, 0x62, 0x2c, 0x5a, 0xaa, 0x08, 0xce, 0xd6, 0xdb,
	0xb8, 0x7a, 0x21, 0xf3, 0xae, 0xe8, 0xe3, 0x93, 0x62, 0xc2, 0x2b, 0x28, 0x7c, 0xe0, 0x37, 0xc7,
	0x52, 0x94, 0xa2, 0x9e, 0xaa, 0x8e, 0xf0, 0x12, 0xa6, 0x5b, 0x36, 0x8e, 0xe5, 0x28, 0x1f, 0xb7,
	0x80, 0x08, 0x13, 0xa7, 0xf7, 0x24, 0xc7, 0xa5, 0xa8, 0x67, 0x2a, 0x6b, 0x3c, 0x87, 0x71, 0xa0,
	0x28, 0x27, 0xa5, 0xa8, 0x4f, 0xd4, 0x8f, 0xac, 0xee, 0x61, 0xfe, 0x5b, 0xe3, 0x6d, 0x83, 0x12,
	0x8e, 0xf7, 0x14, 0xa3, 0xde, 0x51, 0x6e, 0x99, 0xa9, 0x1e, 0x7b, 0xf3, 0x68, 0x30, 0xdf, 0x7e,
	0x09, 0x98, 0x3f, 0xe4, 0xe7, 0x3e, 0x6b, 0xa7, 0x77, 0x14, 0xf0, 0x11, 0x2e, 0xfa, 0xb8, 0x95,
	0x7d, 0x25, 0x97, 0xd6, 0x6c, 0xf0, 0x7a, 0xd9, 0x2d, 0xfc, 0x33, 0xe8, 0x66, 0xf1, 0xff, 0xc2,
	0xdb, 0xa6, 0x3a, 0xc2, 0x27, 0x58, 0x0c, 0x31, 0xec, 0x52, 0xd0, 0x26, 0x71, 0x38, 0x28, 0x6a,
	0x53, 0xe4, 0x6f, 0xbd, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x62, 0x73, 0xb6, 0x54, 0x66, 0x01,
	0x00, 0x00,
}
